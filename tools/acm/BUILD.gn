# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../os_account.gni")

config("tools_acm_config") {
  include_dirs = [
    "${ability_runtime_path}/services/common/include",
    "include",
  ]

  defines = [
    "ACCOUNT_LOG_TAG = \"AccountTool\"",
    "LOG_DOMAIN = 0xD001B00",
  ]
}

ohos_source_set("tools_acm_source_set") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [
    "${ability_runtime_path}/tools/aa/src/shell_command.cpp",
    "${os_account_path}/frameworks/domain_account/src/domain_account_common.cpp",
    "src/account_command.cpp",
    "src/main.cpp",
  ]

  public_configs = [
    "${ability_runtime_path}/tools/aa:ability_command_config",
    ":tools_acm_config",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  if (os_account_multiple_active_accounts) {
    cflags += [ "-DENABLE_MULTIPLE_ACTIVE_ACCOUNTS" ]
  }
  if (os_account_support_deactivate_main_os_account) {
    cflags += [ "-DSUPPROT_STOP_MAIN_OS_ACCOUNT" ]
  }
  cflags += [ "-pipe" ]
  cflags_cc = [
    "-Wdate-time",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wshadow",
  ]

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
  ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
  ]
  subsystem_name = "account"
  part_name = "os_account"
}

ohos_executable("acm") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  deps = [ ":tools_acm_source_set" ]

  external_deps = [ "hilog:libhilog" ]

  configs = [ "${account_coverage_config_path}:coverage_flags" ]

  install_enable = true

  subsystem_name = "account"
  part_name = "os_account"
}

group("tools_acm") {
  deps = [ ":acm" ]
}
