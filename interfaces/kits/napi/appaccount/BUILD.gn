# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/account/os_account/os_account.gni")
import("//build/ohos.gni")

config("appaccount_kit_config") {
  include_dirs = [
    "${app_account_interfaces_native_path}/include",
    "//third_party/libuv/include",
    "//third_party/node/src",
    "//foundation/arkui/napi/interfaces/kits",
    "${app_account_kits_path}/include",
    "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/inner/napi_common",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/services/abilitymgr/include",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  cflags += [ "-pipe" ]

  defines = [
    "ACCOUNT_LOG_TAG = \"AppAccountJsKit\"",
    "LOG_DOMAIN = 0xD001B00",
  ]
}

ohos_shared_library("appaccount") {
  include_dirs = []
  configs = [ ":appaccount_kit_config" ]

  public_configs = [ ":appaccount_kit_config" ]
  sources = [
    "${app_account_kits_path}/src/napi_app_account.cpp",
    "${app_account_kits_path}/src/napi_app_account_authenticator.cpp",
    "${app_account_kits_path}/src/napi_app_account_authenticator_callback.cpp",
    "${app_account_kits_path}/src/napi_app_account_common.cpp",
    "${app_account_kits_path}/src/napi_app_account_constant.cpp",
    "${app_account_kits_path}/src/napi_app_account_module.cpp",
  ]

  deps = [
    "${app_account_services_path}:accountmgr",
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${common_path}:libaccount_common",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/inner/napi_common:napi_common",
    "//foundation/arkui/napi/:ace_napi",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//utils/native/base:utils",
  ]

  relative_install_dir = "module/account"

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "os_account:app_account_innerkits",
  ]

  subsystem_name = "account"

  part_name = "os_account"
}
