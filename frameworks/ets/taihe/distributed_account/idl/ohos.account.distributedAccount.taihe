/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!namespace("@ohos.account.distributedAccount", "distributedAccount")

@class
interface DistributedInfo {
    @get("name") GetName(): String;
    @set("name") SetName(name: String): void;

    @get("id") GetId(): String;
    @set("id") SetId(id: String): void;

    @get("event") GetEvent(): String;
    @set("event") SetEvent(event: String): void;

    @get("nickname") GetNickname(): Optional<String>;
    @set("nickname") SetNickname(nickName: String): void;

    @get("avatar") GetAvatar(): Optional<String>;
    @set("avatar") SetAvatar(avatar: String): void;

    @get("status") GetStatus(): Optional<DistributedAccountStatus>;

    @get("scalableData") GetScalableData(): Optional<Opaque>;
    @set("scalableData") SetScalableData(scalableData: Opaque): void;
}

enum DistributedAccountStatus: i32 {
    NOT_LOGGED_IN = 0,
    LOGGED_IN = 1
}

interface DistributedAccountAbility {
    @gen_async("getOsAccountDistributedInfo")
    @gen_promise("getOsAccountDistributedInfo")
    getOsAccountDistributedInfoSync(): DistributedInfo;
}

function getDistributedAccountAbility(): DistributedAccountAbility;
