/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!namespace("@ohos.account.distributedAccount", "distributedAccount")

@!sts_inject("""
static { loadLibrary("distributed_account_taihe_native.z") }
""")

struct DistributedInfo {
    name: String;
    id: String;
    event: String;
    nickname: Optional<String>;
    avatar: Optional<String>;
    @readonly status: Optional<DistributedAccountStatus>;
    scalableData: Optional<Opaque>;
}

enum DistributedAccountStatus: i32 {
    NOT_LOGGED_IN = 0,
    LOGGED_IN = 1
}

interface DistributedAccountAbility {
    @gen_async("getOsAccountDistributedInfo")
    @gen_promise("getOsAccountDistributedInfo")
    GetOsAccountDistributedInfoSync(): DistributedInfo;
}

function getDistributedAccountAbility(): DistributedAccountAbility;
