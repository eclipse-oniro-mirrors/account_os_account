/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import IDomainAccountCallback;
sequenceable DomainAccountCommon..OHOS.AccountSA.DomainAccountInfo;
sequenceable DomainAccountCommon..OHOS.AccountSA.GetAccessTokenOptions;
sequenceable DomainAccountCommon..OHOS.AccountSA.GetDomainAccountInfoOptions;

interface OHOS.AccountSA.IDomainAccountPlugin {
    void Auth([in] DomainAccountInfo info, [in] unsigned char[] password,
        [in] IDomainAccountCallback domainAccountCallback);
    void AuthWithPopup([in] DomainAccountInfo info,
        [in] IDomainAccountCallback domainAccountCallback);
    void AuthWithToken([in] DomainAccountInfo info, [in] unsigned char[] token,
        [in] IDomainAccountCallback domainAccountCallback);
    void GetAuthStatusInfo([in] DomainAccountInfo info,
        [in] IDomainAccountCallback domainAccountCallback);
    void GetDomainAccountInfo(
        [in] GetDomainAccountInfoOptions options, [in] IDomainAccountCallback domainAccountCallback);
    void OnAccountBound([in] DomainAccountInfo info, [in] int localId,
        [in] IDomainAccountCallback domainAccountCallback);
    void OnAccountUnBound([in] DomainAccountInfo info, [in] IDomainAccountCallback domainAccountCallback);
    void IsAccountTokenValid([in] DomainAccountInfo info, [in] unsigned char[] token,
        [in] IDomainAccountCallback domainAccountCallback);
    void GetAccessToken([in] DomainAccountInfo domainInfo, [in] unsigned char[] accountToken,
        [in] GetAccessTokenOptions getAccessTokenOptions, [in] IDomainAccountCallback domainAccountCallback);
}
