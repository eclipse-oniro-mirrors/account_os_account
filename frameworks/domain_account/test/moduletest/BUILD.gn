# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../os_account.gni")

module_output_path = "os_account/frameworks/domain_account"

config("domain_account_frameworks_config_moduletest") {
  visibility = [ ":*" ]

  include_dirs = [ "include" ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  defines = [
    "ACCOUNT_LOG_TAG = \"DomainAccountMTestFwk\"",
    "LOG_DOMAIN = 0xD001B00",
  ]
}

ohos_moduletest("domain_account_frameworks_module_test") {
  module_out_path = module_output_path

  include_dirs = [
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/account_iam",
    "${services_path}/accountmgr/include/domain_account",
    "${services_path}/accountmgr/include/osaccount",
  ]
  sources = [
    "${services_path}/accountmgr/src/domain_account/domain_account_plugin_proxy.cpp",
    "${services_path}/accountmgr/src/domain_account/inner_domain_account_manager.cpp",
    "src/domain_account_client_module_test.cpp",
    "src/mock_domain_auth_callback.cpp",
    "src/mock_domain_auth_callback_for_listener.cpp",
    "src/mock_domain_create_domain_account_callback.cpp",
    "src/mock_domain_get_access_token_callback.cpp",
    "src/mock_domain_has_domain_info_callback.cpp",
    "src/mock_domain_plugin.cpp",
  ]
  configs = [ ":domain_account_frameworks_config_moduletest" ]

  deps = [
    "${account_iam_framework_path}:account_iam_innerkits",
    "${common_path}:libaccount_common",
    "${domain_account_framework_path}:domain_account_innerkits",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "os_account:os_account_innerkits",
  ]

  cflags_cc = []

  if (has_user_auth_part) {
    cflags_cc += [ "-DHAS_USER_AUTH_PART" ]
    external_deps += [ "user_auth_framework:userauth_client" ]
  }
}

ohos_moduletest("domain_account_common_module_test") {
  module_out_path = module_output_path

  include_dirs = [ "${domain_account_interfaces_native_path}/include" ]
  sources = [ "src/domain_account_common_test.cpp" ]
  configs = [ ":domain_account_frameworks_config_moduletest" ]

  deps = [
    "${common_path}:libaccount_common",
    "${domain_account_framework_path}:domain_account_innerkits",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "os_account:os_account_innerkits",
  ]
}

ohos_moduletest("domain_account_plugin_service_test") {
  module_out_path = module_output_path

  include_dirs = [ "${domain_account_interfaces_native_path}/include" ]
  sources = [
    "src/domain_account_plugin_service_test.cpp",
    "src/mock_domain_plugin.cpp",
  ]
  configs = [ ":domain_account_frameworks_config_moduletest" ]

  deps = [
    "${common_path}:libaccount_common",
    "${domain_account_framework_path}:domain_account_innerkits",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "os_account:os_account_innerkits",
  ]
}

ohos_moduletest("domain_account_plugin_stub_test") {
  module_out_path = module_output_path

  include_dirs = [ "${domain_account_interfaces_native_path}/include" ]
  sources = [ "src/domain_account_plugin_stub_test.cpp" ]
  configs = [ ":domain_account_frameworks_config_moduletest" ]

  deps = [
    "${common_path}:libaccount_common",
    "${domain_account_framework_path}:domain_account_innerkits",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "os_account:os_account_innerkits",
  ]
}

group("moduletest") {
  testonly = true

  deps = [
    ":domain_account_common_module_test",
    ":domain_account_frameworks_module_test",
    ":domain_account_plugin_service_test",
    ":domain_account_plugin_stub_test",
  ]
}
