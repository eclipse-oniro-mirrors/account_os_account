# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("//build/ohos.gni")
import("../../../os_account.gni")

idl_gen_interface("distributed_account_event_interface") {
  sources = [ "IDistributedAccountEvent.idl" ]
  log_domainid = "0xD001B00"
  log_tag = "DistributedAccountFwk"
  subsystem_name = "account"
  part_name = "os_account"
}

config("distributed_account_event_interface_public_config") {
  include_dirs = [ "${target_gen_dir}" ]
}

config("public_account_config") {
  include_dirs = [
    "include",
    "${common_path}/include",
    "${common_path}/utils/include",
    "${domain_account_interfaces_native_path}/include",
    "${innerkits_common}/include",
    "${innerkits_path}/include",
    "${os_account_interfaces_native_path}/include",
    "${target_gen_dir}",
  ]
}

config("accountkits_config") {
  defines = [
    "ACCOUNT_LOG_TAG = \"DistributedAccountFwk\"",
    "LOG_DOMAIN = 0xD001B00",
  ]
}

ohos_shared_library("libaccountkits") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "./cfi_blocklist.txt"
  }

  sources = [
    "src/account_info_parcel.cpp",
    "src/account_proxy.cpp",
    "src/distributed_account_event_service.cpp",
    "src/ohos_account_kits.cpp",
    "src/ohos_account_kits_impl.cpp",
    "src/system_ability_status_change_listener.cpp",
  ]
  output_values = get_target_outputs(":distributed_account_event_interface")
  sources += filter_include(output_values,
                            [
                              "*distributed_account_event_proxy.cpp",
                              "*distributed_account_event_stub.cpp",
                            ])

  cflags = [ "-pipe" ]
  cflags_cc = [
    "-Wdate-time",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wshadow",
  ]

  configs = [ ":accountkits_config" ]

  public_configs = [ ":public_account_config" ]

  if (!use_clang_coverage) {
    version_script = "libohos_account_innerkits.map"
  }

  deps = [ "${common_path}:libaccount_common" ]
  deps += [ ":distributed_account_event_interface" ]

  external_deps = [
    "ability_base:want",
    "cJSON:cjson",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "account"
  part_name = "os_account"
}
