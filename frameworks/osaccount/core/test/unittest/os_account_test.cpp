/*
 * Copyright (c) 2021 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <gtest/gtest.h>
#include <memory>
#include "account_error_no.h"
#include "iremote_object.h"
#define private public
#include "os_account.h"
#undef private
#include "singleton.h"

using namespace testing::ext;
using namespace OHOS;
using namespace OHOS::AccountSA;

namespace {
const std::string STRING_EMPTY = "";
const std::string STRING_NAME = "name";
const std::string STRING_NAME_OUT_OF_RANGE =
    "name_out_of_range_"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
const std::string STRING_PHOTO_OUT_OF_RANGE =
    "extra_info_out_of_range_"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890"
    "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
}  // namespace
class OsAccountTest : public testing::Test {
public:
    static void SetUpTestCase(void);
    static void TearDownTestCase(void);
    void SetUp(void) override;
    void TearDown(void) override;
    std::shared_ptr<OsAccount> osAccount_;
};

void OsAccountTest::SetUpTestCase(void)
{}

void OsAccountTest::TearDownTestCase(void)
{}

void OsAccountTest::SetUp(void)
{
    osAccount_ = std::make_shared<OsAccount>();
}

void OsAccountTest::TearDown(void)
{}

/**
 * @tc.name: OsAccountTest001
 * @tc.desc: Test CreateOsAccount string name out of range
 * @tc.type: FUNC
 * @tc.require: AR000CUF55
 */
HWTEST_F(OsAccountTest, OsAccountTest001, TestSize.Level0)
{
    OsAccountInfo osAccountInfo;
    ErrCode errCode = osAccount_->CreateOsAccount(STRING_NAME_OUT_OF_RANGE, 0, osAccountInfo);
    EXPECT_EQ(errCode, ERR_OSACCOUNT_KIT_LOCAL_NAME_OUTFLOW_ERROR);
}

/**
 * @tc.name: OsAccountTest002
 * @tc.desc: Test CreateOsAccount string name is empty
 * @tc.type: FUNC
 * @tc.require: AR000CUF55
 */
HWTEST_F(OsAccountTest, OsAccountTest002, TestSize.Level0)
{
    OsAccountInfo osAccountInfo;
    ErrCode errCode = osAccount_->CreateOsAccount(STRING_EMPTY, 0, osAccountInfo);
    EXPECT_EQ(errCode, ERR_OSACCOUNT_KIT_LOCAL_NAME_EMPTY_ERROR);
}

/**
 * @tc.name: OsAccountTest003
 * @tc.desc: Test RemoveOsAccount Id error
 * @tc.type: FUNC
 * @tc.require: AR000CUF55
 */
HWTEST_F(OsAccountTest, OsAccountTest003, TestSize.Level0)
{
    ErrCode errCode = osAccount_->RemoveOsAccount(0);
    EXPECT_EQ(errCode, ERR_OSACCOUNT_KIT_CANNOT_DELETE_ID_ERROR);
}

/**
 * @tc.name: OsAccountTest004
 * @tc.desc: Test SetOsAccountName string name out of range
 * @tc.type: FUNC
 * @tc.require: AR000CUF55
 */
HWTEST_F(OsAccountTest, OsAccountTest004, TestSize.Level0)
{
    ErrCode errCode = osAccount_->SetOsAccountName(100, STRING_NAME_OUT_OF_RANGE);
    EXPECT_EQ(errCode, ERR_OSACCOUNT_KIT_LOCAL_NAME_OUTFLOW_ERROR);
}

/**
 * @tc.name: OsAccountTest005
 * @tc.desc: Test SetOsAccountName name is empty
 * @tc.type: FUNC
 * @tc.require: AR000CUF55
 */
HWTEST_F(OsAccountTest, OsAccountTest005, TestSize.Level0)
{
    ErrCode errCode = osAccount_->SetOsAccountName(100, STRING_EMPTY);
    EXPECT_EQ(errCode, ERR_OSACCOUNT_KIT_LOCAL_NAME_EMPTY_ERROR);
}

/**
 * @tc.name: OsAccountTest006
 * @tc.desc: Test SetOsAccountProfilePhoto string photo out of range
 * @tc.type: FUNC
 * @tc.require: AR000CUF55
 */
HWTEST_F(OsAccountTest, OsAccountTest006, TestSize.Level0)
{
    ErrCode errCode = osAccount_->SetOsAccountProfilePhoto(100, STRING_PHOTO_OUT_OF_RANGE);
    EXPECT_EQ(errCode, ERR_OSACCOUNT_KIT_PHOTO_OUTFLOW_ERROR);
}
