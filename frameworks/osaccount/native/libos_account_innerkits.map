# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

1.0 {
  global:
    extern "C++" {
        "VTT for OHOS::AccountSA::DomainAccountInfo";
        "VTT for OHOS::AccountSA::OsAccountInfo";
        "VTT for OHOS::AccountSA::OsAccountSubscribeInfo";
        "VTT for OHOS::AccountSA::CreateOsAccountOptions";
        "VTT for OHOS::AccountSA::CreateOsAccountForDomainOptions";
        "vtable for OHOS::AccountSA::OsAccountInfo";
        "vtable for OHOS::AccountSA::OsAccountSubscribeInfo";
        "vtable for OHOS::AccountSA::CreateOsAccountOptions";
        "vtable for OHOS::AccountSA::CreateOsAccountForDomainOptions";
        "OHOS::AccountSA::OsAccount::GetInstance()";
        "OHOS::AccountSA::OsAccount::CreateOsAccountEventListener(std::__h::shared_ptr<OHOS::AccountSA::OsAccountSubscriber> const&, OHOS::sptr<OHOS::IRemoteObject>&)";
        "OHOS::AccountSA::OsAccount::CreateOsAccount(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::AccountSA::OsAccountType const&, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccount::RemoveOsAccount(int)";
        "OHOS::AccountSA::OsAccount::IsOsAccountExists(int, bool&)";
        "OHOS::AccountSA::OsAccount::IsOsAccountActived(int, bool&)";
        "OHOS::AccountSA::OsAccount::IsOsAccountConstraintEnable(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool&)";
        "OHOS::AccountSA::OsAccount::CheckOsAccountConstraintEnabled(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool&)";
        "OHOS::AccountSA::OsAccount::IsOsAccountVerified(int, bool&)";
        "OHOS::AccountSA::OsAccount::GetCreatedOsAccountsCount(unsigned int&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountLocalIdFromProcess(int&)";
        "OHOS::AccountSA::OsAccount::IsMainOsAccount(bool&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountLocalIdFromDomain(OHOS::AccountSA::DomainAccountInfo const&, int&)";
        "OHOS::AccountSA::OsAccount::QueryMaxOsAccountNumber(int&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountAllConstraints(int, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::AccountSA::OsAccount::QueryAllCreatedOsAccounts(std::__h::vector<OHOS::AccountSA::OsAccountInfo, std::__h::allocator<OHOS::AccountSA::OsAccountInfo>>&)";
        "OHOS::AccountSA::OsAccount::QueryCurrentOsAccount(OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccount::QueryOsAccountById(int, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountTypeFromProcess(OHOS::AccountSA::OsAccountType&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountType(int, OHOS::AccountSA::OsAccountType&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountProfilePhoto(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::AccountSA::OsAccount::IsMultiOsAccountEnable(bool&)";
        "OHOS::AccountSA::OsAccount::SetOsAccountName(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccount::SetOsAccountProfilePhoto(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccount::SetOsAccountConstraints(int, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool)";
        "OHOS::AccountSA::OsAccount::ActivateOsAccount(int)";
        "OHOS::AccountSA::OsAccount::DeactivateOsAccount(int)";
        "OHOS::AccountSA::OsAccount::DeactivateAllOsAccounts()";
        "OHOS::AccountSA::OsAccount::StartOsAccount(int)";
        "OHOS::AccountSA::OsAccount::GetOsAccountLocalIdBySerialNumber(long long, int&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountLocalIdBySerialNumber(long, int&)";
        "OHOS::AccountSA::OsAccount::GetSerialNumberByOsAccountLocalId(int const&, long long&)";
        "OHOS::AccountSA::OsAccount::GetSerialNumberByOsAccountLocalId(int const&, long&)";
        "OHOS::AccountSA::OsAccount::IsOsAccountCompleted(int, bool&)";
        "OHOS::AccountSA::OsAccount::SubscribeOsAccount(std::__h::shared_ptr<OHOS::AccountSA::OsAccountSubscriber> const&)";
        "OHOS::AccountSA::OsAccount::UnsubscribeOsAccount(std::__h::shared_ptr<OHOS::AccountSA::OsAccountSubscriber> const&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountSwitchMod()";
        "OHOS::AccountSA::OsAccount::DumpState(int const&, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::AccountSA::OsAccount::IsCurrentOsAccountVerified(bool&)";
        "OHOS::AccountSA::OsAccount::SetCurrentOsAccountIsVerified(bool)";
        "OHOS::AccountSA::OsAccount::SetOsAccountIsVerified(int, bool)";
        "OHOS::AccountSA::OsAccount::GetCreatedOsAccountNumFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int&)";
        "OHOS::AccountSA::OsAccount::GetSerialNumberFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long long&)";
        "OHOS::AccountSA::OsAccount::GetSerialNumberFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long&)";
        "OHOS::AccountSA::OsAccount::GetMaxAllowCreateIdFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccount::GetOsAccountListFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<OHOS::AccountSA::OsAccountInfo, std::__h::allocator<OHOS::AccountSA::OsAccountInfo>>&)";
        "OHOS::AccountSA::OsAccount::SetOsAccountProfilePhoto(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccount::ResetOsAccountProxy()";
        "OHOS::AccountSA::OsAccount::QueryActiveOsAccountIds(std::__h::vector<int, std::__h::allocator<int>>&)";
        "OHOS::AccountSA::OsAccount::QueryOsAccountConstraintSourceTypes(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<OHOS::AccountSA::ConstraintSourceTypeInfo, std::__h::allocator<OHOS::AccountSA::ConstraintSourceTypeInfo>>&)";
        "OHOS::AccountSA::OsAccount::SetSpecificOsAccountConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool, int, int, bool)";
        "OHOS::AccountSA::OsAccount::SetGlobalOsAccountConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool, int, bool)";
        "OHOS::AccountSA::OsAccount::SetDefaultActivatedOsAccount(int)";
        "OHOS::AccountSA::OsAccount::GetDefaultActivatedOsAccount(int&)";
        "OHOS::AccountSA::OsAccountSubscribeInfo::Marshalling(OHOS::Parcel&) const";
        "OHOS::AccountSA::OsAccountProxy::OsAccountProxy(OHOS::sptr<OHOS::IRemoteObject> const&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountSwitchMod()";
        "OHOS::AccountSA::OsAccountManager::CreateOsAccount(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::AccountSA::OsAccountType const&, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::CreateOsAccount(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, OHOS::AccountSA::OsAccountType const&, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::CreateOsAccountWithFullInfo(OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::UpdateOsAccountWithFullInfo(OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::RemoveOsAccount(int)";
        "OHOS::AccountSA::OsAccountManager::IsOsAccountExists(int, bool&)";
        "OHOS::AccountSA::OsAccountManager::IsOsAccountActived(int, bool&)";
        "OHOS::AccountSA::OsAccountManager::IsOsAccountConstraintEnable(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&,, bool&)";
        "OHOS::AccountSA::OsAccountManager::IsOsAccountVerified(int, bool&)";
        "OHOS::AccountSA::OsAccountManager::CheckOsAccountConstraintEnabled(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&,, bool&)";
        "OHOS::AccountSA::OsAccountManager::GetCreatedOsAccountsCount(unsigned int&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountLocalIdFromUid(int, int&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountLocalIdFromProcess(int&)";
        "OHOS::AccountSA::OsAccountManager::SetOsAccountIsVerified(int, bool)";
        "OHOS::AccountSA::OsAccountManager::StartOsAccount(int)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::SetSpecificOsAccountConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool, int, int, bool)";
        "OHOS::AccountSA::OsAccountManager::IsOsAccountCompleted(int, bool&)";
        "OHOS::AccountSA::OsAccountManager::SetCurrentOsAccountIsVerified(bool)";
        "OHOS::AccountSA::OsAccountManager::GetCreatedOsAccountNumFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int&)";
        "OHOS::AccountSA::OsAccountManager::GetSerialNumberFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long long&)";
        "OHOS::AccountSA::OsAccountManager::GetSerialNumberFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, long&)";
        "OHOS::AccountSA::OsAccountManager::GetMaxAllowCreateIdFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, int&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountListFromDatabase(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::vector<OHOS::AccountSA::OsAccountInfo, std::__h::allocator<OHOS::AccountSA::OsAccountInfo>>&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountSwitchMod()";
        "OHOS::AccountSA::OsAccountManager::GetDefaultActivatedOsAccount(int&)";
        "OHOS::AccountSA::OsAccountManager::SetDefaultActivatedOsAccount(int)";
        "OHOS::AccountSA::OsAccountManager::SetOsAccountName(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccountManager::CreateOsAccountForDomain(OHOS::AccountSA::OsAccountType const&, OHOS::AccountSA::DomainAccountInfo const&, std::__h::shared_ptr<OHOS::AccountSA::DomainAccountCallback> const&)";
        "OHOS::AccountSA::OsAccountManager::GetDistributedVirtualDeviceId(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountAllConstraints(int, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>&)";
        "OHOS::AccountSA::OsAccountManager::QueryOsAccountConstraintSourceTypes(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::vector<OHOS::AccountSA::ConstraintSourceTypeInfo, std::__h::allocator<OHOS::AccountSA::ConstraintSourceTypeInfo>>&)";
        "OHOS::AccountSA::OsAccountManager::QueryAllCreatedOsAccounts(std::__h::vector<OHOS::AccountSA::OsAccountInfo, std::__h::allocator<OHOS::AccountSA::OsAccountInfo>>&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountProfilePhoto(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::AccountSA::OsAccountManager::QueryCurrentOsAccount(OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::GetBundleIdFromUid(int, int&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountLocalIdFromDomain(OHOS::AccountSA::DomainAccountInfo const&, int&)";
        "OHOS::AccountSA::OsAccountManager::SetOsAccountProfilePhoto(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccountManager::QueryMaxOsAccountNumber(unsigned int&)";
        "OHOS::AccountSA::OsAccountManager::QueryMaxLoggedInOsAccountNumber(unsigned int&)";
        "OHOS::AccountSA::OsAccountManager::CheckOsAccountConstraintEnabled(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool&)";
        "OHOS::AccountSA::OsAccountManager::IsOsAccountConstraintEnable(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, bool&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountTypeFromProcess(OHOS::AccountSA::OsAccountType&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountType(int, OHOS::AccountSA::OsAccountType&)";
        "OHOS::AccountSA::OsAccountManager::IsMultiOsAccountEnable(bool&)";
        "OHOS::AccountSA::OsAccountManager::IsCurrentOsAccountVerified(bool&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountLocalIdBySerialNumber(long long, int&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountLocalIdBySerialNumber(long, int&)";
        "OHOS::AccountSA::OsAccountManager::GetSerialNumberByOsAccountLocalId(int const&, long long&)";
        "OHOS::AccountSA::OsAccountManager::GetSerialNumberByOsAccountLocalId(int const&, long&)";
        "OHOS::AccountSA::OsAccountManager::IsMainOsAccount(bool&)";
        "OHOS::AccountSA::OsAccountManager::QueryOsAccountById(int, OHOS::AccountSA::OsAccountInfo&)";
        "OHOS::AccountSA::OsAccountManager::SetOsAccountConstraints(int, std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool)";
        "OHOS::AccountSA::OsAccountManager::ActivateOsAccount(int)";
        "OHOS::AccountSA::OsAccountManager::DeactivateOsAccount(int)";
        "OHOS::AccountSA::OsAccountManager::DeactivateAllOsAccounts()";
        "OHOS::AccountSA::OsAccountManager::QueryActiveOsAccountIds(std::__h::vector<int, std::__h::allocator<int>>&)";
        "OHOS::AccountSA::OsAccountManager::SetGlobalOsAccountConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool, int, bool)";
        "OHOS::AccountSA::OsAccountManager::SubscribeOsAccount(std::__h::shared_ptr<OHOS::AccountSA::OsAccountSubscriber> const&)";
        "OHOS::AccountSA::OsAccountManager::UnsubscribeOsAccount(std::__h::shared_ptr<OHOS::AccountSA::OsAccountSubscriber> const&)";
        "OHOS::AccountSA::OsAccountManager::QueryActiveOsAccountIds(std::__h::vector<int, std::__h::allocator<int>>&)";
        "OHOS::AccountSA::OsAccountManager::SetGlobalOsAccountConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>> const&, bool, int, bool)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountShortName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        "OHOS::AccountSA::OsAccountManager::GetOsAccountShortName(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&)";
        OHOS::AccountSA::OsAccountManager::IsOsAccountForeground*;
        OHOS::AccountSA::OsAccountManager::GetForegroundOsAccountLocalId*;
        "OHOS::AccountSA::OsAccountManager::GetForegroundOsAccounts(std::__h::vector<OHOS::AccountSA::ForegroundOsAccount, std::__h::allocator<OHOS::AccountSA::ForegroundOsAccount>>&)";
        "OHOS::AccountSA::OsAccountManager::GetBackgroundOsAccountLocalIds(std::__h::vector<int, std::__h::allocator<int>>&)";
        "OHOS::AccountSA::OsAccountManager::SetOsAccountToBeRemoved(int, bool)";
        "OHOS::AccountSA::OsAccountInfo::GetLocalId() const";
        "OHOS::AccountSA::OsAccountInfo::ParamCheck()";
        "OHOS::AccountSA::OsAccountInfo::GetDomainInfo(OHOS::AccountSA::DomainAccountInfo&) const";
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::AccountSA::OsAccountType, long long)";
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::AccountSA::OsAccountType, long)";
        "OHOS::AccountSA::OsAccountInfo::SetCreateTime(long long)";
        "OHOS::AccountSA::OsAccountInfo::SetCreateTime(long)";
        "OHOS::AccountSA::OsAccountInfo::SetIsCreateCompleted(bool)";
        "OHOS::AccountSA::OsAccountInfo::GetCredentialId() const";
        "OHOS::AccountSA::OsAccountInfo::SetCredentialId(unsigned long long)";
        "OHOS::AccountSA::OsAccountInfo::SetCredentialId(unsigned long)";
        "OHOS::AccountSA::OsAccountInfo::SetIsActived(bool)";
        "OHOS::AccountSA::OsAccountInfo::SetConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>)";
        "OHOS::AccountSA::OsAccountInfo::GetIsCreateCompleted() const";
        "OHOS::AccountSA::OsAccountInfo::SetIsVerified(bool)";
        "OHOS::AccountSA::OsAccountInfo::SetLastLoginTime(long long)";
        "OHOS::AccountSA::OsAccountInfo::SetLastLoginTime(long)";
        "OHOS::AccountSA::OsAccountInfo::GetIsActived() const";
        "OHOS::AccountSA::OsAccountInfo::SetDomainInfo(OHOS::AccountSA::DomainAccountInfo const&)";
        "OHOS::AccountSA::OsAccountInfo::SetLocalName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>)";
        "OHOS::AccountSA::OsAccountInfo::SetToBeRemoved(bool)";
        "OHOS::AccountSA::OsAccountInfo::GetToBeRemoved() const";
        "OHOS::AccountSA::OsAccountInfo::GetConstraints() const";
        "OHOS::AccountSA::OsAccountInfo::GetIsVerified() const";
        "OHOS::AccountSA::OsAccountInfo::GetPhoto() const";
        "OHOS::AccountSA::OsAccountInfo::SetPhoto(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>)";
        "OHOS::AccountSA::OsAccountInfo::GetType() const";
        "OHOS::AccountSA::OsAccountInfo::GetLocalName() const";
        "OHOS::AccountSA::OsAccountInfo::GetShortName() const";
        "OHOS::AccountSA::OsAccountInfo::SetShortName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccountInfo::GetSerialNumber() const";
        "OHOS::AccountSA::OsAccountInfo::FromJson(nlohmann::json_abi_v3_11_2::basic_json<std::__h::map, std::__h::vector, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, bool, long long, unsigned long long, double, std::__h::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::__h::vector<unsigned char, std::__h::allocator<unsigned char>>> const&)";
        "OHOS::AccountSA::OsAccountInfo::FromJson(nlohmann::json_abi_v3_11_2::basic_json<std::__h::map, std::__h::vector, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, bool, long, unsigned long, double, std::__h::allocator, nlohmann::json_abi_v3_11_2::adl_serializer, std::__h::vector<unsigned char, std::__h::allocator<unsigned char>>> const&)";
        "OHOS::AccountSA::OsAccountInfo::Marshalling(OHOS::Parcel&) const";
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo()";
        "OHOS::AccountSA::OsAccountInfo::ToString() const";
        "OHOS::AccountSA::OsAccountInfo::GetPrimeKey() const";
        "OHOS::AccountSA::OsAccountInfo::SetLocalId(int)";
        "OHOS::AccountSA::OsAccountInfo::Unmarshalling(OHOS::Parcel&)";
        "OHOS::AccountSA::OsAccountInfo::GetCreateTime() const";
        "OHOS::AccountSA::OsAccountInfo::GetLastLoginTime() const";
        "OHOS::AccountSA::OsAccountInfo::SetType(OHOS::AccountSA::OsAccountType)";
        "OHOS::AccountSA::OsAccountInfo::SetSerialNumber(long long)";
        "OHOS::AccountSA::OsAccountInfo::SetSerialNumber(long)";
        "OHOS::AccountSA::OsAccountInfo::SetIsForeground(bool)";
        "OHOS::AccountSA::OsAccountInfo::GetIsForeground() const";
        "OHOS::AccountSA::OsAccountInfo::SetIsLoggedIn(bool)";
        "OHOS::AccountSA::OsAccountInfo::GetIsLoggedIn() const";
        *OHOS::AccountSA::OsAccountInfo::SetDisplayId*;
        *OHOS::AccountSA::OsAccountInfo::GetDisplayId*;
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::AccountSA::OsAccountType, long long)";
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::AccountSA::OsAccountType, long)";
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::AccountSA::OsAccountType, long long)";
        "OHOS::AccountSA::OsAccountInfo::OsAccountInfo(int, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, OHOS::AccountSA::OsAccountType, long)";
        "OHOS::AccountSA::OsAccountInfo::SetConstraints(std::__h::vector<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, std::__h::allocator<std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>>>)";
        "OHOS::AccountSA::OsAccountInfo::SetLocalName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>)";
        "OHOS::AccountSA::OsAccountInfo::SetPhoto(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>)";
        "OHOS::AccountSA::OsAccountInfo::FromJson(nlohmann::basic_json<std::__h::map, std::__h::vector, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, bool, long long, unsigned long long, double, std::__h::allocator, nlohmann::adl_serializer, std::__h::vector<unsigned char, std::__h::allocator<unsigned char>>> const&)";
        "OHOS::AccountSA::OsAccountInfo::FromJson(nlohmann::basic_json<std::__h::map, std::__h::vector, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>, bool, long, unsigned long, double, std::__h::allocator, nlohmann::adl_serializer, std::__h::vector<unsigned char, std::__h::allocator<unsigned char>>> const&)";
        "OHOS::AccountSA::OsAccountSubscriber::OsAccountSubscriber()";
        "OHOS::AccountSA::OsAccountSubscriber::~OsAccountSubscriber()";
        "OHOS::AccountSA::OsAccountSubscriber::OsAccountSubscriber(OHOS::AccountSA::OsAccountSubscribeInfo const&)";
        "OHOS::AccountSA::OsAccountSubscriber::GetSubscribeInfo(OHOS::AccountSA::OsAccountSubscribeInfo&) const";
        "OHOS::AccountSA::OsAccountSubscribeInfo::Unmarshalling(OHOS::Parcel&)";
        "OHOS::AccountSA::OsAccountSubscribeInfo::OsAccountSubscribeInfo(OHOS::AccountSA::OS_ACCOUNT_SUBSCRIBE_TYPE const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::OsAccountSubscribeInfo::~OsAccountSubscribeInfo()";
        "OHOS::AccountSA::OsAccountSubscribeInfo::OsAccountSubscribeInfo()";
        "OHOS::AccountSA::OsAccountSubscribeInfo::GetOsAccountSubscribeType(OHOS::AccountSA::OS_ACCOUNT_SUBSCRIBE_TYPE&) const";
        "OHOS::AccountSA::OsAccountSubscribeInfo::GetName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>>&) const";
        "OHOS::AccountSA::OsAccountSubscribeInfo::SetOsAccountSubscribeType(OHOS::AccountSA::OS_ACCOUNT_SUBSCRIBE_TYPE const&)";
        "OHOS::AccountSA::OsAccountSubscribeInfo::SetName(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        *OHOS::AccountSA::CreateOsAccountOptions*;
        *OHOS::AccountSA::CreateOsAccountForDomainOptions*;
        "vtable for OHOS::AccountSA::DomainAccountInfo";
        "OHOS::AccountSA::DomainAccountInfo::DomainAccountInfo()";
        "OHOS::AccountSA::DomainAccountClient::GetInstance()";
        "OHOS::AccountSA::DomainAccountClient::GetAccountStatus(OHOS::AccountSA::DomainAccountInfo const&, OHOS::AccountSA::DomainAccountStatus&)";
        "OHOS::AccountSA::DomainAccountProxy::DomainAccountProxy(OHOS::sptr<OHOS::IRemoteObject> const&)";
        "OHOS::AccountSA::DomainAccountCallbackProxy::DomainAccountCallbackProxy(OHOS::sptr<OHOS::IRemoteObject> const&)";
        "OHOS::AccountSA::DomainAccountInfo::DomainAccountInfo(std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&, std::__h::basic_string<char, std::__h::char_traits<char>, std::__h::allocator<char>> const&)";
        "OHOS::AccountSA::DomainAccountInfo::Clear()";
        "VTT for OHOS::AccountSA::DomainServerConfig";
        "OHOS::AccountSA::DomainServerConfig::Unmarshalling(OHOS::Parcel&)";
        "OHOS::AccountSA::DomainServerConfig::DomainServerConfig()";
        "OHOS::AccountSA::DomainAccountCallbackService::DomainAccountCallbackService(std::__h::shared_ptr<OHOS::AccountSA::DomainAccountCallback> const&)";
        "OHOS::AccountSA::DomainAccountCallbackStub::DomainAccountCallbackStub()";
        "OHOS::AccountSA::DomainAccountCallbackStub::~DomainAccountCallbackStub()";
        "OHOS::AccountSA::DomainAccountCallbackStub::OnRemoteRequest(unsigned int, OHOS::MessageParcel&, OHOS::MessageParcel&, OHOS::MessageOption&)";
        "non-virtual thunk to OHOS::AccountSA::DomainAccountCallbackStub::~DomainAccountCallbackStub()";
        "virtual thunk to OHOS::AccountSA::DomainAccountCallbackStub::~DomainAccountCallbackStub()";
    };
  local:
    *;
};