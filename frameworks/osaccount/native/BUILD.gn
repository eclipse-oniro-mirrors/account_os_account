# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../os_account.gni")

config("osaccountinterface_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${common_path}/include",
    "${domain_account_framework_path}/include",
    "${domain_account_interfaces_native_path}/include",
    "${innerkits_native_path}/include",
    "${innerkits_path}/include",
    "${os_account_core_path}/include",
    "${os_account_interfaces_native_path}/include",
    "${innerkits_common}/include",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  cflags += [ "-pipe" ]
}

ohos_shared_library("os_account_innerkits") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [
    "${domain_account_framework_path}/src/domain_account_callback_proxy.cpp",
    "${domain_account_framework_path}/src/domain_account_callback_service.cpp",
    "${domain_account_framework_path}/src/domain_account_callback_stub.cpp",
    "${domain_account_framework_path}/src/domain_account_client.cpp",
    "${domain_account_framework_path}/src/domain_account_common.cpp",
    "${domain_account_framework_path}/src/domain_account_proxy.cpp",
    "${domain_account_framework_path}/src/domain_account_status_listener_manager.cpp",
    "${os_account_core_path}/src/os_account.cpp",
    "${os_account_core_path}/src/os_account_death_recipient.cpp",
    "${os_account_core_path}/src/os_account_event_listener.cpp",
    "${os_account_core_path}/src/os_account_event_stub.cpp",
    "${os_account_core_path}/src/os_account_proxy.cpp",
    "src/os_account_info.cpp",
    "src/os_account_manager.cpp",
    "src/os_account_subscribe_info.cpp",
    "src/os_account_subscriber.cpp",
  ]

  defines = [
    "ACCOUNT_LOG_TAG = \"OsAccountNativeFwk\"",
    "LOG_DOMAIN = 0xD001B00",
  ]

  configs = [
    ":osaccountinterface_config",
    "${account_coverage_config_path}:coverage_flags",
  ]

  public_configs = [ ":osaccountinterface_config" ]

  use_exceptions = true

  deps = [
    "${common_path}:libaccount_common",
    "${domain_account_framework_path}:domain_account_innerkits",
    "${innerkits_native_path}:libaccountkits",
  ]

  if (!use_clang_coverage) {
    version_script = "libos_account_innerkits.map"
  }

  external_deps = [
    "ability_base:want",
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  subsystem_name = "account"
  part_name = "os_account"
}
