# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../../../../os_account.gni")

module_output_path = "os_account/services/accountmgr"

config("os_account_control_file_manager_test_config") {
  include_dirs = [
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/osaccount",
    "${common_path}/log/include",
    "${common_path}/perf_stat/include",
    "${common_path}/account_error/include",
    "${innerkits_path}/include",
    "//third_party/json/include",
  ]
}

ohos_unittest("OsAccountControlFileManagerTest") {
  module_out_path = module_output_path
  resource_config_file =
      "${os_account_path}/test/resource/accountmgrservice/ohos_test.xml"

  sources = [ "os_account_control_file_manager_test.cpp" ]
  configs = [
    ":os_account_control_file_manager_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
  ]
  deps = [
    "${common_path}:libaccount_common",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "kv_store:distributeddata_inner",
  ]
  part_name = "os_account"
}

config("os_account_data_storage_test_config") {
  include_dirs = [
    "${services_path}/accountmgr/test/mock/os_account",
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/osaccount",
    "${services_path}/accountmgr/include/ability_manager_adapter",
    "${common_path}/log/include",
    "${common_path}/perf_stat/include",
    "${common_path}/account_error/include",
    "${innerkits_path}/include",
    "//third_party/json/include",
    "${services_path}/accountmgr/test/unittest/os_account/mock",
  ]
}

ohos_unittest("OsAccountDataStorageTest") {
  module_out_path = module_output_path
  resource_config_file =
      "${os_account_path}/test/resource/accountmgrservice/ohos_test.xml"

  sources = [ "os_account_data_storage_test.cpp" ]
  configs = [
    ":os_account_data_storage_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
  ]

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "kv_store:distributeddata_inner",
  ]
  part_name = "os_account"
}

ohos_unittest("os_account_domain_account_callback_test") {
  module_out_path = module_output_path

  sources = [
    "${services_path}/accountmgr/src/osaccount/os_account_domain_account_callback.cpp",
    "os_account_domain_account_callback_test.cpp",
  ]
  configs = [
    ":os_account_data_storage_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
  ]

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
  ]
  part_name = "os_account"
}

config("os_account_subscribe_death_recipient_test_config") {
  include_dirs = [
    "${services_path}/accountmgr/test/mock/os_account",
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/osaccount",
    "${services_path}/accountmgr/include/ability_manager_adapter",
    "${common_path}/log/include",
    "${common_path}/perf_stat/include",
    "${common_path}/account_error/include",
    "${innerkits_path}/include",
    "//third_party/json/include",
    "${services_path}/accountmgr/test/unittest/os_account/mock",
  ]
}

ohos_unittest("OsAccountSubscribeDeathRecipientTest") {
  module_out_path = module_output_path
  resource_config_file =
      "${os_account_path}/test/resource/accountmgrservice/ohos_test.xml"

  sources = [
    "${services_path}/accountmgr/test/mock/src/mock_account_mgr_service.cpp",
    "os_account_subscribe_death_recipient_test.cpp",
  ]
  configs = [
    ":os_account_subscribe_death_recipient_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
    "${services_path}/accountmgr/:ability_manager_config",
  ]

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "user_auth_framework:userauth_client",
  ]
  part_name = "os_account"
}

config("os_account_amgr_test_config") {
  include_dirs = [
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/osaccount",
    "${services_path}/accountmgr/include/ability_manager_adapter",
    "${common_path}/log/include",
    "${common_path}/perf_stat/include",
    "${common_path}/account_error/include",
    "${innerkits_path}/include",
    "//third_party/json/include",
    "${services_path}/accountmgr/test/unittest/os_account/mock",
  ]
}

ohos_unittest("OsAccountInnerAccmgrCovTest") {
  cflags_cc = []
  module_out_path = module_output_path
  resource_config_file =
      "${os_account_path}/test/resource/accountmgrservice/ohos_test.xml"

  sources = [
    "os_account_inner_account_mgr_cov.cpp",
    "os_account_service_test.cpp",
  ]
  configs = [
    ":os_account_amgr_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
    "${services_path}/accountmgr/:ability_manager_config",
  ]

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:wantagent_innerkits",
    "access_token:libaccesstoken_sdk",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "samgr:samgr_proxy",
    "user_auth_framework:userauth_client",
  ]
  if (has_ces_part) {
    cflags_cc += [ "-DHAS_CES_PART" ]
    external_deps += [ "common_event_service:cesfwk_innerkits" ]
  }
  part_name = "os_account"
}

config("os_account_amgr_mock_config") {
  include_dirs = [
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/osaccount",
    "${services_path}/accountmgr/include/ability_manager_adapter",
    "${services_path}/accountmgr/test/unittest/os_account/mock",
    "${common_path}/log/include",
    "${common_path}/perf_stat/include",
    "${common_path}/account_error/include",
    "${innerkits_path}/include",
    "//third_party/json/include",
  ]
}

ohos_unittest("OsAccountInnerAccmgrMockTest") {
  module_out_path = module_output_path
  resource_config_file =
      "${os_account_path}/test/resource/accountmgrservice/ohos_test.xml"

  sources = [
    "${services_path}/accountmgr/test/mock/os_account/os_account_interface.cpp",
    "os_account_inner_account_mgr_mock.cpp",
  ]
  configs = [
    ":os_account_amgr_mock_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
    "${services_path}/accountmgr/:ability_manager_config",
  ]

  deps = [
    "${common_path}:libaccount_common",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:wantagent_innerkits",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "samgr:samgr_proxy",
    "user_auth_framework:userauth_client",
  ]
  part_name = "os_account"
}

group("unittest") {
  testonly = true

  deps = [
    ":OsAccountControlFileManagerTest",
    ":OsAccountInnerAccmgrCovTest",
    ":OsAccountInnerAccmgrMockTest",
    ":OsAccountSubscribeDeathRecipientTest",
    ":os_account_domain_account_callback_test",
  ]

  if (has_kv_store_part) {
    deps += [ ":OsAccountDataStorageTest" ]
  }
}
