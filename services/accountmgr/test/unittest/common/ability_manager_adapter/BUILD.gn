# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../../../../../os_account.gni")

module_output_path = "os_account/os_account"

config("ability_manager_adapter_test_config") {
  include_dirs = [
    "${common_path}/log/include",
    "${innerkits_common}/include",
    "${domain_account_interfaces_native_path}/include",
    "${os_account_interfaces_native_path}/include",
    "${services_path}/accountmgr/include",
    "${services_path}/accountmgr/include/ability_manager_adapter",
  ]
}

ohos_unittest("AbilityManagerAdapterTest") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  module_out_path = module_output_path
  cflags_cc = []

  sources = [ "${services_path}/accountmgr/src/ability_manager_adapter/ability_manager_adapter.cpp" ]

  sources += [ "ability_manager_adapter_test.cpp" ]

  configs = [
    ":ability_manager_adapter_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
  ]

  deps = [ "${common_path}:libaccount_common" ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  if (os_account_multiple_active_accounts ||
      os_account_support_deactivate_main_os_account) {
    external_deps += [ "ability_runtime:app_manager" ]
    cflags_cc += [ "-DENABLE_DEACTIVATE_OS_ACCOUNTS" ]
  }

  part_name = "os_account"
}

ohos_unittest("AbilityManagerAdapterMockTest") {
  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  module_out_path = module_output_path
  cflags_cc = []

  sources = [
    "${services_path}/accountmgr/src/ability_manager_adapter/ability_manager_adapter.cpp",
    "${services_path}/accountmgr/test/mock/src/mock_service_registry.cpp",
  ]

  sources += [ "ability_manager_adapter_mock_test.cpp" ]

  configs = [
    ":ability_manager_adapter_test_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
  ]

  deps = [ "${common_path}:libaccount_common" ]
  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  if (os_account_multiple_active_accounts ||
      os_account_support_deactivate_main_os_account) {
    external_deps += [ "ability_runtime:app_manager" ]
    cflags_cc += [ "-DENABLE_DEACTIVATE_OS_ACCOUNTS" ]
  }

  part_name = "os_account"
}

group("unittest") {
  testonly = true

  deps = [
    ":AbilityManagerAdapterMockTest",
    ":AbilityManagerAdapterTest",
  ]
}
