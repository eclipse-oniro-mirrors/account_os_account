# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/account/os_account/os_account.gni")
import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "os_account_standard/accountmgrservice"

config("accountmgr_service_test_config") {
  include_dirs = [
    "./include",
    "${services_path}/accountmgr/include",
    "${common_path}/log/include",
    "${common_path}/perf_stat/include",
    "${common_path}/account_error/include",
    "${common_path}/database/include",
    "${innerkits_path}/include",
    "//third_party/json/include",
    "//third_party/mbedtls/include",
    "//utils/native/base/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//foundation/filemanagement/storage_service/interfaces/innerkits/storage_manager/native",
    "//foundation/storage/storage_manager/interfaces/innerkits/storage_manager/native",
    "//foundation/filemanagement/storage_service/services/storage_manager/include/ipc",
    "//foundation/storage/storage_manager/services/storage_manager/include/ipc",
  ]
}

ohos_unittest("account_mgr_test") {
  module_out_path = module_output_path
  cflags_cc = []
  sources = [
    "${common_path}/log/src/account_log_wrapper.cpp",
    "${common_path}/perf_stat/src/perf_stat.cpp",
    "${innerkits_native_path}/src/account_proxy.cpp",
    "${services_path}/accountmgr/src/account_bundle_manager.cpp",
    "${services_path}/accountmgr/src/account_data_storage.cpp",
    "${services_path}/accountmgr/src/account_dump_helper.cpp",
    "${services_path}/accountmgr/src/account_event_provider.cpp",
    "${services_path}/accountmgr/src/account_file_operator.cpp",
    "${services_path}/accountmgr/src/account_helper_data.cpp",
    "${services_path}/accountmgr/src/account_mgr_service.cpp",
    "${services_path}/accountmgr/src/account_permission_manager.cpp",
    "${services_path}/accountmgr/src/account_state_machine.cpp",
    "${services_path}/accountmgr/src/account_stub.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_common_event_oberserver.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_common_event_subscriber.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_control_manager.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_data_storage.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_manager_service.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_subscribe_death_recipient.cpp",
    "${services_path}/accountmgr/src/appaccount/app_account_subscribe_manager.cpp",
    "${services_path}/accountmgr/src/appaccount/inner_app_account_manager.cpp",
    "${services_path}/accountmgr/src/ohos_account_data_deal.cpp",
    "${services_path}/accountmgr/src/ohos_account_manager.cpp",
    "${services_path}/accountmgr/src/osaccount/inner_os_account_manager.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_control_file_manager.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_data_storage.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_database_operator.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_delete_user_idm_callback.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_file_operator.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_manager_service.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_photo_operator.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_standard_interface.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_stop_user_callback.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_subscribe_death_recipient.cpp",
    "${services_path}/accountmgr/src/osaccount/os_account_subscribe_manager.cpp",
  ]

  sources += [
    "account_mgr_service_test.cpp",
    "account_state_machine_test.cpp",
  ]

  configs = [
    ":accountmgr_service_test_config",
    "${services_path}/accountmgr:accountmgr_config",
    "${services_path}/accountmgr/test:accountmgr_test_config",
  ]
  deps = [
    "${app_account_services_path}/src/appaccount:app_account_service_core",
    "${innerkits_native_path}:libaccountkits",
    "${os_account_core_path}:os_account_core",
    "${os_account_innerkits_native_path}:os_account_innerkits",
    "${services_path}/accountmgr:accountmgr",
    "//third_party/googletest:gtest_main",
    "//third_party/mbedtls:mbedtls",
    "//utils/native/base:utils",
  ]

  if (has_user_idm_part) {
    cflags_cc += [ "-DHAS_USER_IDM_PART" ]
    deps +=
        [ "//base/user_iam/user_auth/frameworks/user_idm:useridm_framework" ]
  }

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "distributeddatamgr:distributeddata_inner",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "startup_l2:syspara",
    "storage_service:storage_manager_sa_proxy",
  ]

  if (has_ces_part) {
    cflags_cc += [ "-DHAS_CES_PART" ]
    external_deps += [ "common_event_service:cesfwk_innerkits" ]
  }

  part_name = "os_account_standard"
}

group("unittest") {
  testonly = true

  deps = [ ":account_mgr_test" ]
}
